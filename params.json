{"name":"Application","tagline":"","body":"### IMaint\r\nIMaint is a piece of software used to improve maintenance management in property management companies. It is designed to keep track of work orders, monitor assets condition, manage inventory, improve billing and closing.  \r\n\r\n### Classes\r\nThe current version contains the following classes:\r\n\r\n#### Appliance\r\nis a superclass for appliances.  The class creates on object of appliances and takes manufacturer, serial number, and model number \r\ninformation.\r\n\r\n```java\r\npublic class Appliance\r\n{\r\n    private String model;\r\n    private String serial;\r\n    private String manufacturer;\r\n\r\n    /**\r\n     * Constructor for objects of class Appliance used when no info about an appliance is provided\r\n     */\r\n    public Appliance(){ }\r\n\r\n    /**\r\n     * Constructor for objects of class Appliance used when the initial information is provided\r\n     */\r\n    public Appliance (String manufacturer, String model, String serial)\r\n    {\r\n        this.model=model;\r\n        this.serial=serial;\r\n        this.setManufacturer(manufacturer);\r\n    }\r\n\r\n    /**\r\n     * The method adds Serial Number, Model Number and Manufacturer Name to the object.\r\n     * @param String manufacturer - manufacturer name (Bosch, GE, etc.).\r\n     * @return nothing.\r\n     * \r\n     */\r\n    public void setAttributes (String manufacturer, String model, String serial)\r\n    \r\n    {\r\n        this.model=model;\r\n        this.serial=serial;\r\n        this.setManufacturer(manufacturer);\r\n    }\r\n\r\n    /**\r\n     * A setter for Model Number.\r\n     * @param Model Number as a string.\r\n     * @return nothing.\r\n     */\r\n    public void setModelNumber(String model)\r\n    {\r\n    \tthis.model=model;    \t\r\n    }\r\n    \r\n    /**\r\n     * A getter for Model Number.\r\n     * @return Model Number.\r\n     */\r\n    public String getModelNumber()\r\n    {\r\n        return model;\r\n    }\r\n    \r\n    /**\r\n     * A setter for Serial Number.\r\n     * @param Serial Number as a string.\r\n     * @return nothing.\r\n     */\r\n    public void setSerialNumber(String serial)\r\n    {\r\n    \tthis.serial=serial;    \t\r\n    }\r\n\r\n    /**\r\n     * A getter for Serial Number.\r\n     * @return Serial Number.\r\n     */\r\n    public String getSerialNumber()\r\n    {\r\n        return serial;\r\n    }\r\n    \r\n    /**\r\n     * A setter for Manufacturer Name.\r\n     * @param Manufacturer Name as a string.\r\n     * @return nothing.\r\n     */\r\n    public void setManufacturer(String manufacturer)\r\n    {\r\n    \tthis.manufacturer=manufacturer;    \t\r\n    }\r\n\r\n    /**\r\n     * A getter for Manufacturer Name.\r\n     * @return Manufacturer Name.\r\n     */\r\n\tpublic String getManufacturer() {\r\n\t\treturn manufacturer;\r\n\t}\r\n\r\n\r\n}\r\n```\r\n\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}