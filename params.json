{"name":"Application","tagline":"","body":"### IMaint\r\nIMaint is a piece of software used to improve maintenance management in property management companies. It is designed to keep track of work orders, monitor assets condition, manage inventory, improve billing and closing.  \r\n\r\n### Classes\r\nThe current version contains the following classes:\r\n\r\n#### Appliance\r\nis a superclass for appliances.  The class creates on object of appliances and takes manufacturer, serial number, and model number \r\ninformation.\r\n\r\n```java\r\npublic class Appliance\r\n{\r\n    private String model;\r\n    private String serial;\r\n    private String manufacturer;\r\n\r\n    /**\r\n     * Constructor for objects of class Appliance used when no info about an appliance is provided\r\n     */\r\n    public Appliance(){ }\r\n\r\n    /**\r\n     * Constructor for objects of class Appliance used when the initial information is provided\r\n     */\r\n    public Appliance (String manufacturer, String model, String serial)\r\n    {\r\n        this.model=model;\r\n        this.serial=serial;\r\n        this.setManufacturer(manufacturer);\r\n    }\r\n\r\n    /**\r\n     * The method adds Serial Number, Model Number and Manufacturer Name to the object.\r\n     * @param String manufacturer - manufacturer name (Bosch, GE, etc.).\r\n     * @return nothing.\r\n     * \r\n     */\r\n    public void setAttributes (String manufacturer, String model, String serial)\r\n    \r\n    {\r\n        this.model=model;\r\n        this.serial=serial;\r\n        this.setManufacturer(manufacturer);\r\n    }\r\n\r\n    /**\r\n     * A setter for Model Number.\r\n     * @param Model Number as a string.\r\n     * @return nothing.\r\n     */\r\n    public void setModelNumber(String model)\r\n    {\r\n    \tthis.model=model;    \t\r\n    }\r\n    \r\n    /**\r\n     * A getter for Model Number.\r\n     * @return Model Number.\r\n     */\r\n    public String getModelNumber()\r\n    {\r\n        return model;\r\n    }\r\n    \r\n    /**\r\n     * A setter for Serial Number.\r\n     * @param Serial Number as a string.\r\n     * @return nothing.\r\n     */\r\n    public void setSerialNumber(String serial)\r\n    {\r\n    \tthis.serial=serial;    \t\r\n    }\r\n\r\n    /**\r\n     * A getter for Serial Number.\r\n     * @return Serial Number.\r\n     */\r\n    public String getSerialNumber()\r\n    {\r\n        return serial;\r\n    }\r\n    \r\n    /**\r\n     * A setter for Manufacturer Name.\r\n     * @param Manufacturer Name as a string.\r\n     * @return nothing.\r\n     */\r\n    public void setManufacturer(String manufacturer)\r\n    {\r\n    \tthis.manufacturer=manufacturer;    \t\r\n    }\r\n\r\n    /**\r\n     * A getter for Manufacturer Name.\r\n     * @return Manufacturer Name.\r\n     */\r\n\tpublic String getManufacturer() {\r\n\t\treturn manufacturer;\r\n\t}\r\n\r\n\r\n}\r\n```\r\n\r\n\r\n### Dishwasher\r\nIs a subclass of Aplliances. In addition to the superclass methods, this class keeps track of the parts available in stock, returns the number of parts left.\r\n\r\n```java  \r\nimport java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\n/**\r\n * Creates an object of a dishwasher, inherits from Appliance.\r\n *\r\n * @author (Kate Miz)\r\n * @version (1.01)\r\n */\r\n\r\npublic class Dishwasher extends Appliance\r\n{\r\n    private BufferedReader reader;\r\n    private HashMap <String, Integer> parts = new HashMap <String, Integer>();\r\n    public ArrayList<WorkOrder> history = new ArrayList<WorkOrder>();\r\n\r\n    public void findParts (String modelNumber)\r\n    {\r\n        String[] data;\r\n        try {\r\n            reader = new BufferedReader(new FileReader(\"washParts.csv\"));\r\n            String line=\"\";\r\n             while (line != null)\r\n                {\r\n                    line = reader.readLine();\r\n                    data=line.split(\",\");\r\n                    if (data[0].equals(modelNumber))\r\n                    {\r\n                    for (int i=1; i<data.length; i += 2){\r\n                       String temp = data[i+1];\r\n                       int number = Integer.parseInt(temp);\r\n                       if (number!=0)\r\n                       {\r\n                       parts.put(data[i], number);  \r\n                    }\r\n                     }\r\n                }\r\n            }\r\n            reader.close();\r\n        }\r\n        catch(FileNotFoundException e) {\r\n            System.out.println(\"File missing\");\r\n        }\r\n        catch(IOException e) {\r\n            System.out.println(\"NO!\");\r\n        }\r\n    }\r\n    \r\n    public HashMap<String, Integer> getParts()\r\n    {\r\n        return parts;\r\n    }\r\n    \r\n    public int numberOfParts (String partName)\r\n    {\r\n        return parts.get(partName);\r\n    }\r\n    \r\n    public ArrayList<WorkOrder> getHistory ()\r\n    {\r\n        return history;\r\n    }\r\n}\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}